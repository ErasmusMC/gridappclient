/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client.apps.tophat;

import client.control.Controller;
import client.control.FileListener;
import client.control.NavigationController;
import client.control.SubmitJobs;
import client.model.Application;
import client.model.BinaryFile;
import client.model.Genome;
import client.model.Job;
import client.model.LogicalFile;
import client.view.NameJobBatchDialog;
import client.view.PasswordDialog;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author bram
 */
public class TophatOptionForm extends javax.swing.JPanel implements FileListener<LogicalFile> {

    private static final int DEFAULT_PROXY_TIME = 12;
    private static final int REQUIRED_PROXY_TIME = 6;
    private static final Logger LOGGER = Logger.getLogger(TophatOptionForm.class.getSimpleName());
    private static final Pattern pattern = Pattern.compile(
            "# Match a valid Windows filename (unspecified file system).          \n"
            + "^                                # Anchor to start of string.        \n"
            + "(?!                              # Assert filename is not: CON, PRN, \n"
            + "  (?:                            # AUX, NUL, COM1, COM2, COM3, COM4, \n"
            + "    CON|PRN|AUX|NUL|             # COM5, COM6, COM7, COM8, COM9,     \n"
            + "    COM[1-9]|LPT[1-9]            # LPT1, LPT2, LPT3, LPT4, LPT5,     \n"
            + "  )                              # LPT6, LPT7, LPT8, and LPT9...     \n"
            + "  (?:\\.[^.]*)?                  # followed by optional extension    \n"
            + "  $                              # and end of string                 \n"
            + ")                                # End negative lookahead assertion. \n"
            + "[^<>:\"/\\\\|?*\\x00-\\x1F]*     # Zero or more valid filename chars.\n"
            + "[^<>:\"/\\\\|?*\\x00-\\x1F\\ .]  # Last char is not a space or dot.  \n"
            + "$                                # Anchor to end of string.            ",
            Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE | Pattern.COMMENTS);
    private DefaultListModel<File> fileModel;
    private Application tophat;
    private BinaryFile binaries;
    private NavigationController navigator;
    private Controller controller;

    public TophatOptionForm(Application application, BinaryFile version, NavigationController navigator, Controller controller) {
        this.tophat = application;
        this.binaries = version;
        this.navigator = navigator;
        this.controller = controller;
        initComponents();

        scrollPane.getVerticalScrollBar().setUnitIncrement(16);

        fileModel = new DefaultListModel<>();
        fileList.setModel(fileModel);

        for (LogicalFile file : controller.getFiles()) {

            if (file.getStatus() < 100) {
                continue;
            }

            switch (file.getType()) {
                case "Genome":
                    genomeComboBox.addItem(file);
                    break;
                case "Annotation":
                    annotationComboBox.addItem(file);
                    break;
            }
        }

        //Let the inner scrollPane ignore scrolling
        innerScrollPane.addMouseWheelListener(new MouseWheelListener() {
            @Override
            public void mouseWheelMoved(MouseWheelEvent e) {
                innerScrollPane.getParent().dispatchEvent(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        qualityEncoding = new javax.swing.ButtonGroup();
        libraryTypes = new javax.swing.ButtonGroup();
        coverageSearch = new javax.swing.ButtonGroup();
        presetEndToEnd = new javax.swing.ButtonGroup();
        centerPanel = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        optionsForm = new javax.swing.JPanel();
        mateInnerDistance = new javax.swing.JSpinner();
        innerScrollPane = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        browseAnnotationButton = new javax.swing.JButton();
        browseFilesButton = new javax.swing.JButton();
        genomeComboBox = new javax.swing.JComboBox();
        removeFilesButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        annotationComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        maxNumberOfMismatches = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        maximumGapLength = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        maxReadEditDistance = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        standardDeviation = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        minAnchorLength = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        maxAnchorMismatches = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        minIntronLength = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        maxIntronLength = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        maxInsertionLength = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        maxDeletionLength = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        maxReadAlignments = new javax.swing.JSpinner();
        reportSecondaryAlignments = new javax.swing.JCheckBox();
        reportConcordantMappingsOnly = new javax.swing.JCheckBox();
        noMixedReads = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        minCoverageIntronLength = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        maxCoverageIntronLength = new javax.swing.JSpinner();
        useMicroExonSearch = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        reAlignEditDistance = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        junctionComboBox = new javax.swing.JComboBox();
        browseJunctionsButton = new javax.swing.JButton();
        noNovelJuncs = new javax.swing.JCheckBox();
        transcriptomeOnly = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        maxTranscriptomeMultiHits = new javax.swing.JSpinner();
        prefilterMultiHits = new javax.swing.JCheckBox();
        enableBowtieN = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        maxSegmentMismatches = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        segmentLength = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        minSegmentIntronLength = new javax.swing.JSpinner();
        maxSegmentIntronLength = new javax.swing.JSpinner();
        keepFastaOrder = new javax.swing.JCheckBox();
        noSortBAM = new javax.swing.JCheckBox();
        noConvertBAM = new javax.swing.JCheckBox();
        jLabel32 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jRadioButton12 = new javax.swing.JRadioButton();
        jRadioButton13 = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel38 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jSpinner5 = new javax.swing.JSpinner();
        jSpinner7 = new javax.swing.JSpinner();
        jSpinner8 = new javax.swing.JSpinner();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jSpinner9 = new javax.swing.JSpinner();
        jSpinner10 = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        enableFusionSearch = new javax.swing.JCheckBox();
        jLabel49 = new javax.swing.JLabel();
        fusionAnchorLength = new javax.swing.JSpinner();
        jLabel50 = new javax.swing.JLabel();
        minFusionDistance = new javax.swing.JSpinner();
        jLabel51 = new javax.swing.JLabel();
        maxFusionMismatches = new javax.swing.JSpinner();
        jLabel52 = new javax.swing.JLabel();
        maxFusionMultiPairs = new javax.swing.JSpinner();
        jLabel53 = new javax.swing.JLabel();
        maxFusionMultiReads = new javax.swing.JSpinner();
        ignoreChromosomes = new javax.swing.JCheckBox();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        insertionComboBox = new javax.swing.JComboBox();
        browseInsertionsButton = new javax.swing.JButton();
        noNovelIndels = new javax.swing.JCheckBox();
        jLabel56 = new javax.swing.JLabel();
        deletionComboBox = new javax.swing.JComboBox();
        browseDeletions = new javax.swing.JButton();
        buttonBar = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(640, 480));
        setLayout(new java.awt.BorderLayout());

        centerPanel.setFocusable(false);
        centerPanel.setLayout(new javax.swing.BoxLayout(centerPanel, javax.swing.BoxLayout.LINE_AXIS));

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setAutoscrolls(true);

        mateInnerDistance.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(0), null, Integer.valueOf(5)));

        innerScrollPane.setWheelScrollingEnabled(false);

        fileList.setFocusable(false);
        innerScrollPane.setViewportView(fileList);

        jLabel1.setText("Raw Sequence Files");
        jLabel1.setFocusable(false);

        browseAnnotationButton.setText("Browse");
        browseAnnotationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseAnnotationButtonActionPerformed(evt);
            }
        });

        browseFilesButton.setText("Add Files");
        browseFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFilesButtonActionPerformed(evt);
            }
        });

        removeFilesButton.setText("Remove");
        removeFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFilesButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Genome");
        jLabel3.setFocusable(false);

        jLabel2.setText("Annotations");
        jLabel2.setFocusable(false);

        jLabel4.setText("Max. read mismatches");
        jLabel4.setToolTipText("Discard any read which number of mismatches exceed this value.");
        jLabel4.setFocusable(false);

        annotationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));

        jLabel5.setText("Max. read gap length");
        jLabel5.setToolTipText("Discard any read which total gap-length exceeds this value.");
        jLabel5.setFocusable(false);

        maxNumberOfMismatches.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));
        maxNumberOfMismatches.setToolTipText("");

        jLabel6.setText("Mate-pairs inner distance");
        jLabel6.setFocusable(false);

        maximumGapLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel7.setText("Max. read edit distance");
        jLabel7.setToolTipText("Discard any read having more than these many edit distance");
        jLabel7.setFocusable(false);

        maxReadEditDistance.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel8.setText("Mate-pairs std. deviation");
        jLabel8.setFocusable(false);

        standardDeviation.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel9.setText("Min. anchor length");
        jLabel9.setFocusable(false);

        minAnchorLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(8), Integer.valueOf(3), null, Integer.valueOf(1)));

        jLabel10.setText("Max. spliced mismatches");
        jLabel10.setFocusable(false);

        maxAnchorMismatches.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel11.setText("Min. intron length");
        jLabel11.setFocusable(false);

        minIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(70), Integer.valueOf(0), null, Integer.valueOf(5)));

        jLabel12.setText("Max. intron length");

        maxIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(500000), null, null, Integer.valueOf(1000)));

        jLabel13.setText("Max. insertion length");
        jLabel13.setFocusable(false);

        maxInsertionLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel14.setText("Max. deletion length");
        jLabel14.setFocusable(false);

        maxDeletionLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel15.setText("Quality scale encoding");
        jLabel15.setFocusable(false);

        qualityEncoding.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Default");

        qualityEncoding.add(jRadioButton3);
        jRadioButton3.setText("Solexa");

        qualityEncoding.add(jRadioButton4);
        jRadioButton4.setText("Phred");

        jLabel16.setText("Max. multi-hits per read");
        jLabel16.setFocusable(false);

        maxReadAlignments.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));

        reportSecondaryAlignments.setText("Report secondary alignments");

        reportConcordantMappingsOnly.setText("Report concordant mappings only");

        noMixedReads.setText("Only report paired reads where both are mapped");

        jLabel17.setText("Min. cov. intron length");
        jLabel17.setFocusable(false);

        minCoverageIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(0), null, Integer.valueOf(10)));

        jLabel18.setText("Max. cov. intron length");
        jLabel18.setFocusable(false);

        maxCoverageIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20000), Integer.valueOf(0), null, Integer.valueOf(1000)));

        useMicroExonSearch.setText("Use micro-exon search");

        jLabel19.setText("Library type");
        jLabel19.setFocusable(false);

        libraryTypes.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("fr-unstranded");

        libraryTypes.add(jRadioButton5);
        jRadioButton5.setText("fr-firststrand");

        libraryTypes.add(jRadioButton6);
        jRadioButton6.setText("fr-secondstrand");

        jLabel20.setText("Re-align read edit distance");
        jLabel20.setEnabled(false);
        jLabel20.setFocusable(false);

        reAlignEditDistance.setModel(new javax.swing.SpinnerNumberModel(0, 0, 50, 1));
        reAlignEditDistance.setEnabled(false);

        jLabel21.setText("Coverage Search");

        coverageSearch.add(jRadioButton8);
        jRadioButton8.setSelected(true);
        jRadioButton8.setText("Default");

        coverageSearch.add(jRadioButton9);
        jRadioButton9.setText("Enable");

        coverageSearch.add(jRadioButton10);
        jRadioButton10.setText("Disable");

        jLabel22.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel22.setText("Advanced Options");
        jLabel22.setFocusable(false);

        jLabel23.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel23.setText("Bowtie 2 Options");

        jLabel26.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel26.setText("Options");

        jLabel27.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel27.setText("Annotations");

        jLabel28.setText("Junctions");
        jLabel28.setFocusable(false);

        junctionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));

        browseJunctionsButton.setText("Browse");
        browseJunctionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseJunctionsButtonActionPerformed(evt);
            }
        });

        noNovelJuncs.setText("No novel junctions");

        transcriptomeOnly.setText("Only align to the transcriptome");

        jLabel29.setText("Maximum transcriptome multi-hits");
        jLabel29.setFocusable(false);

        maxTranscriptomeMultiHits.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));

        prefilterMultiHits.setText("Pre-filter multi-hits");

        enableBowtieN.setText("Enable Bowtie -n option");

        jLabel30.setText("Max. segment mismatches");

        maxSegmentMismatches.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel24.setText("Segment length");

        segmentLength.setModel(new javax.swing.SpinnerNumberModel(25, 0, 1000, 5));

        jLabel25.setText("Min. segment intron length");

        jLabel31.setText("Max. segment intron length");

        minSegmentIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(0), null, Integer.valueOf(10)));

        maxSegmentIntronLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(500000), Integer.valueOf(0), null, Integer.valueOf(1000)));

        keepFastaOrder.setText("Keep fasta ordering");

        noSortBAM.setText("Don't sort output BAM");

        noConvertBAM.setText("Don't convert to BAM");

        jLabel32.setText("End-to-end preset");
        jLabel32.setEnabled(false);

        presetEndToEnd.add(jRadioButton7);
        jRadioButton7.setText("very fast");
        jRadioButton7.setEnabled(false);

        presetEndToEnd.add(jRadioButton11);
        jRadioButton11.setText("fast");
        jRadioButton11.setEnabled(false);

        presetEndToEnd.add(jRadioButton12);
        jRadioButton12.setSelected(true);
        jRadioButton12.setText("sensitive");
        jRadioButton12.setEnabled(false);

        presetEndToEnd.add(jRadioButton13);
        jRadioButton13.setText("very sensitive");
        jRadioButton13.setEnabled(false);

        jLabel33.setText("-N");
        jLabel33.setEnabled(false);

        jLabel34.setText("-L");
        jLabel34.setEnabled(false);

        jLabel35.setText("-i");
        jLabel35.setEnabled(false);

        jLabel36.setText("-n-ceil");
        jLabel36.setEnabled(false);

        jLabel37.setText("-gbar");
        jLabel37.setEnabled(false);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 50, 1));
        jSpinner2.setEnabled(false);

        jLabel38.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel38.setText("Alignment");
        jLabel38.setEnabled(false);

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner3.setEnabled(false);

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner6.setEnabled(false);

        jLabel39.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel39.setText("Scoring");
        jLabel39.setEnabled(false);

        jLabel40.setText("-mp");
        jLabel40.setEnabled(false);

        jLabel41.setText("-np");
        jLabel41.setEnabled(false);

        jLabel42.setText("-rdg");
        jLabel42.setEnabled(false);

        jLabel43.setText("-rfg");
        jLabel43.setEnabled(false);

        jLabel44.setText("-score-min");
        jLabel44.setEnabled(false);

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(5.3f), Float.valueOf(0.0f), null, Float.valueOf(0.1f)));
        jSpinner4.setEnabled(false);

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(6.2f), Float.valueOf(0.0f), null, Float.valueOf(0.1f)));
        jSpinner5.setEnabled(false);

        jSpinner7.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(5.3f), Float.valueOf(0.0f), null, Float.valueOf(0.1f)));
        jSpinner7.setEnabled(false);

        jSpinner8.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner8.setEnabled(false);

        jLabel45.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel45.setText("Effort");
        jLabel45.setEnabled(false);

        jLabel46.setText("-D");
        jLabel46.setEnabled(false);

        jLabel47.setText("-R");
        jLabel47.setEnabled(false);

        jSpinner9.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(15), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner9.setEnabled(false);

        jSpinner10.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner10.setEnabled(false);

        jTextField1.setText("S,1,1.25");
        jTextField1.setEnabled(false);

        jTextField2.setText("L,0,0.15");
        jTextField2.setEnabled(false);

        jTextField3.setText("L,-0.6,-0.6");
        jTextField3.setEnabled(false);

        jLabel48.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel48.setText("Fusion Mapping Options");

        enableFusionSearch.setText("Enable fusion search");

        jLabel49.setText("Fusion anchor length");

        fusionAnchorLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel50.setText("Min. fusion distance");

        minFusionDistance.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10000000), Integer.valueOf(0), null, Integer.valueOf(100000)));

        jLabel51.setText("Max. fusion mismatches");

        maxFusionMismatches.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel52.setText("Max. fusion multireads");

        maxFusionMultiPairs.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel53.setText("Max. fusion multipairs");

        maxFusionMultiReads.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        ignoreChromosomes.setText("Ignore chromosomes");

        jLabel54.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel54.setText("Insertions and Deletions");

        jLabel55.setText("Insertions");

        insertionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));

        browseInsertionsButton.setText("Browse");
        browseInsertionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInsertionsButtonActionPerformed(evt);
            }
        });

        noNovelIndels.setText("No novel indels");

        jLabel56.setText("Deletions");

        deletionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));

        browseDeletions.setText("Browse");
        browseDeletions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseDeletionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsFormLayout = new javax.swing.GroupLayout(optionsForm);
        optionsForm.setLayout(optionsFormLayout);
        optionsFormLayout.setHorizontalGroup(
            optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(innerScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25)
                        .addComponent(genomeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(browseFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(optionsFormLayout.createSequentialGroup()
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addGap(27, 27, 27)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, optionsFormLayout.createSequentialGroup()
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(maxReadEditDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(maxNumberOfMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(40, 40, 40)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, optionsFormLayout.createSequentialGroup()
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(minIntronLength)
                                                .addComponent(minAnchorLength, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(maxInsertionLength, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mateInnerDistance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(40, 40, 40)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maxIntronLength, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(maxAnchorMismatches, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                        .addComponent(standardDeviation, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(maxDeletionLength, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton4)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(372, 372, 372)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(maximumGapLength, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(reAlignEditDistance)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(478, 478, 478))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(junctionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(annotationComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(browseJunctionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseAnnotationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(optionsFormLayout.createSequentialGroup()
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel30))
                        .addGap(18, 18, 18)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addComponent(maxSegmentMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24)
                                .addGap(133, 133, 133)
                                .addComponent(segmentLength, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minSegmentIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minCoverageIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(maxCoverageIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addGap(26, 26, 26)
                                        .addComponent(maxSegmentIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(optionsFormLayout.createSequentialGroup()
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(64, 64, 64)
                                .addComponent(maxReadAlignments, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(reportSecondaryAlignments)
                            .addComponent(reportConcordantMappingsOnly)
                            .addComponent(noMixedReads)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21))
                                .addGap(81, 81, 81)
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addComponent(jRadioButton8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton10))
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addComponent(jRadioButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton6))))
                            .addComponent(enableBowtieN)
                            .addComponent(keepFastaOrder)
                            .addComponent(noSortBAM)
                            .addComponent(noConvertBAM)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel36)
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel35))
                                        .addGap(40, 40, 40)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton13))
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel40)
                                            .addComponent(jLabel39)
                                            .addComponent(jLabel41)
                                            .addComponent(jLabel42)
                                            .addComponent(jLabel43)
                                            .addComponent(jLabel44))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(65, 65, 65)
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel45)
                                            .addGroup(optionsFormLayout.createSequentialGroup()
                                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel46)
                                                    .addComponent(jLabel47))
                                                .addGap(18, 18, 18)
                                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jSpinner10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinner9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addComponent(jLabel48)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                                            .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(enableFusionSearch)
                                                .addComponent(jLabel49))
                                            .addGap(30, 30, 30))
                                        .addGroup(optionsFormLayout.createSequentialGroup()
                                            .addComponent(jLabel50)
                                            .addGap(61, 61, 61)))
                                    .addGroup(optionsFormLayout.createSequentialGroup()
                                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel51)
                                            .addComponent(jLabel52)
                                            .addComponent(jLabel53))
                                        .addGap(35, 35, 35)))
                                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(maxFusionMultiPairs, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxFusionMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minFusionDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fusionAnchorLength, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxFusionMultiReads, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(ignoreChromosomes)
                            .addComponent(jLabel27)
                            .addComponent(noNovelJuncs)
                            .addComponent(transcriptomeOnly)
                            .addGroup(optionsFormLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(18, 18, 18)
                                .addComponent(maxTranscriptomeMultiHits, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prefilterMultiHits)
                            .addComponent(jLabel54)
                            .addComponent(noNovelIndels)
                            .addComponent(useMicroExonSearch))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deletionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(browseInsertionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseDeletions, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        optionsFormLayout.setVerticalGroup(
            optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(genomeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(browseFilesButton)
                    .addComponent(removeFilesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(innerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(maxNumberOfMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(maximumGapLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxReadEditDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(reAlignEditDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(mateInnerDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(standardDeviation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(minAnchorLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(maxAnchorMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(minIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(maxIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(maxInsertionLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(maxDeletionLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(maxReadAlignments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportSecondaryAlignments)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportConcordantMappingsOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noMixedReads)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jRadioButton8)
                    .addComponent(jRadioButton9)
                    .addComponent(jRadioButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useMicroExonSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enableBowtieN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(maxSegmentMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(segmentLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(minSegmentIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(maxSegmentIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(minCoverageIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxCoverageIntronLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keepFastaOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noSortBAM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noConvertBAM)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton11)
                    .addComponent(jRadioButton12)
                    .addComponent(jRadioButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel45))
                .addGap(8, 8, 8)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(jSpinner9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41)
                    .addComponent(jSpinner8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(jSpinner10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel42)
                    .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel43)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enableFusionSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(fusionAnchorLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(minFusionDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(maxFusionMismatches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(maxFusionMultiReads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(maxFusionMultiPairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ignoreChromosomes)
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browseAnnotationButton)
                    .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(annotationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browseJunctionsButton)
                    .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(junctionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noNovelJuncs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transcriptomeOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(maxTranscriptomeMultiHits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prefilterMultiHits)
                .addGap(18, 18, 18)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(insertionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseInsertionsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(optionsFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(deletionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseDeletions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noNovelIndels)
                .addGap(24, 24, 24))
        );

        scrollPane.setViewportView(optionsForm);

        centerPanel.add(scrollPane);

        add(centerPanel, java.awt.BorderLayout.CENTER);

        buttonBar.setFocusable(false);
        buttonBar.setPreferredSize(new java.awt.Dimension(640, 40));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonBarLayout = new javax.swing.GroupLayout(buttonBar);
        buttonBar.setLayout(buttonBarLayout);
        buttonBarLayout.setHorizontalGroup(
            buttonBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 426, Short.MAX_VALUE)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        buttonBarLayout.setVerticalGroup(
            buttonBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonBarLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(buttonBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(submitButton))
                .addGap(4, 4, 4))
        );

        add(buttonBar, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        navigator.navigate(this, NavigationController.View.TABLE);
        controller.removeFileCatalogListener(this);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        if (isValidInput() && tryInitialiseProxies()) {

            String batchName = "";
            NameJobBatchDialog dialog = new NameJobBatchDialog(this);
            while (batchName.isEmpty()) {

                dialog.setVisible(true);
                if (dialog.getOption() != JOptionPane.OK_OPTION) {
                    return;
                }

                String name = dialog.getBatchName();

                if (name.contains(" ")) {
                    name = name.replace(" ", "_");
                }

                if (!pattern.matcher(name).matches()) {
                    JOptionPane.showMessageDialog(this, "Please remove special characters!", "Invalid name", JOptionPane.WARNING_MESSAGE);
                    break;
                }

                boolean unique = true;
                for (Job job : controller.getJobs()) {
                    if (job.getBatch().equals(name)) {
                        JOptionPane.showMessageDialog(this, "Please enter a unique name!", "Batch already exists", JOptionPane.WARNING_MESSAGE);
                        unique = false;
                        break;
                    }
                }

                if (unique) {
                    batchName = name;
                }
            }
            dialog.dispose();

            TophatBatch batch = new TophatBatch(batchName);
            batch.setHostLFC(controller.getCatalogHostAddress());
            batch.setHomePathLFC(controller.getCatalogHomePath());
            batch.setSoftwareBinaries(binaries);

            // log to stdout
            batch.addOption("--verbose");

            // options
            batch.addOption("--read-mismatches", (int) maxNumberOfMismatches.getValue());
            batch.addOption("--read-gap-length", (int) maximumGapLength.getValue());
            batch.addOption("--read-edit-dist", (int) maxReadEditDistance.getValue());
            //batch.addOption("--read-realign-edit-dist", (int)reAlignEditDistance.getValue() );
            batch.addOption("--mate-inner-dist", (int) mateInnerDistance.getValue());
            batch.addOption("--mate-std-dev", (int) standardDeviation.getValue());
            batch.addOption("--min-anchor-length", (int) minAnchorLength.getValue());
            batch.addOption("--splice-mismatches", (int) maxAnchorMismatches.getValue());
            batch.addOption("--min-intron-length", (int) minIntronLength.getValue());
            batch.addOption("--max-intron-length", (int) maxIntronLength.getValue());
            batch.addOption("--max-insertion-length", (int) maxInsertionLength.getValue());
            batch.addOption("--max-deletion-length", (int) maxDeletionLength.getValue());

            switch (getSelectedButtonText(qualityEncoding)) {
                case "Solexa":
                    batch.addOption("--solexa-quals");
                    break;
                case "Phred":
                    batch.addOption("--solexa1.3-quals");
                    break;
            }

            batch.addOption("--num-threads", batch.getApplication().getNumberOfThreads());
            batch.addOption("--max-multihits", (int) maxReadAlignments.getValue());

            if (reportSecondaryAlignments.isSelected()) {
                batch.addOption("--report-secondary-alignments");
            }

            if (reportConcordantMappingsOnly.isSelected()) {
                batch.addOption("--no-discordant");
            }

            if (noMixedReads.isSelected()) {
                batch.addOption("--no-mixed");
            }

            switch (getSelectedButtonText(coverageSearch)) {
                case "Enabled":
                    batch.addOption("--coverage-search");
                    break;
                case "Disabled":
                    batch.addOption("--no-coverage-search");
                    break;
            }

            if (useMicroExonSearch.isSelected()) {
                batch.addOption("--microexon-search");
            }

            batch.addOption("--library-type", getSelectedButtonText(libraryTypes));

            // advanced options
            if (enableBowtieN.isSelected()) {
                batch.addOption("--bowtie-n");
            }
            batch.addOption("--segment-mismatches", (int) maxSegmentMismatches.getValue());
            batch.addOption("--segment-length", (int) segmentLength.getValue());
            batch.addOption("--min-segment-intron", (int) minSegmentIntronLength.getValue());
            batch.addOption("--max-segment-intron", (int) maxSegmentIntronLength.getValue());
            batch.addOption("--min-coverage-intron", (int) minCoverageIntronLength.getValue());
            batch.addOption("--max-coverage-intron", (int) maxCoverageIntronLength.getValue());
            if (keepFastaOrder.isSelected()) {
                batch.addOption("--keep-fasta-order");
            }
            if (noSortBAM.isSelected()) {
                batch.addOption("--no-sort-bam");
            }
            if (noConvertBAM.isSelected()) {
                batch.addOption("--no-convert-bam");
            }

            // bowtie 2 options

            // fusion mapping options
            if (enableFusionSearch.isSelected()) {
                batch.addOption("--fusion-search");

                batch.addOption("--fusion-anchor-length", (int) fusionAnchorLength.getValue());
                batch.addOption("--fusion-min-dist", (int) minFusionDistance.getValue());
                batch.addOption("--fusion-read-mismatches", (int) maxFusionMismatches.getValue());
                batch.addOption("--fusion-multireads", (int) maxFusionMultiReads.getValue());
                batch.addOption("--fusion-multipairs", (int) maxFusionMultiPairs.getValue());

                if (ignoreChromosomes.isSelected()) {
                    batch.addOption("--fusion-ignore-chromosomes");
                }
            }

            // annotations
            Object selectedAnnotation = annotationComboBox.getSelectedItem();
            if (selectedAnnotation instanceof File) {
                File annotation = (File) selectedAnnotation;
                batch.addPrerequisiteFiles(annotation);
                batch.addOption("--GTF", annotation.getName());
            } else if (selectedAnnotation instanceof LogicalFile) {
                batch.addOption("--GTF", ((LogicalFile) selectedAnnotation).getName());
            }

            Object selectedJunction = junctionComboBox.getSelectedItem();
            if (selectedJunction instanceof File) {
                File junction = (File) selectedJunction;
                batch.addPrerequisiteFiles(junction);
                batch.addOption("--raw-juncs", junction.getName());
            } else if (selectedJunction instanceof LogicalFile) {
                batch.addOption("--raw-juncs", ((LogicalFile) selectedJunction).getName());
            }

            if (noNovelJuncs.isSelected()) {
                batch.addOption("--no-novel-juncs");
            }

            if (batch.containsOption("--GTF")) {

                if (transcriptomeOnly.isSelected()) {
                    batch.addOption("--transcriptome-only");
                }

                batch.addOption("--transcriptome-max-hits", (int) maxTranscriptomeMultiHits.getValue());

                if (prefilterMultiHits.isSelected()) {
                    batch.addOption("--prefilter-multihits");
                }
            }

            // insertions and deletions
            Object selectedInsertion = insertionComboBox.getSelectedItem();
            if (selectedInsertion instanceof File) {
                File junction = (File) selectedInsertion;
                batch.addPrerequisiteFiles(junction);
                batch.addOption("--insertions", junction.getName());
            } else if (selectedInsertion instanceof LogicalFile) {
                batch.addOption("--insertions", ((LogicalFile) selectedInsertion).getName());
            }

            Object selectedDeletion = deletionComboBox.getSelectedItem();
            if (selectedDeletion instanceof File) {
                File junction = (File) selectedDeletion;
                batch.addPrerequisiteFiles(junction);
                batch.addOption("--deletions", junction.getName());
            } else if (selectedDeletion instanceof LogicalFile) {
                batch.addOption("--deletions", ((LogicalFile) selectedDeletion).getName());
            }

            if (noNovelIndels.isSelected()) {
                batch.addOption("--no-novel-indels");
            }

            Genome genome = (Genome) genomeComboBox.getSelectedItem();
            batch.setGenome(genome);

            Enumeration<File> files = fileModel.elements();
            while (files.hasMoreElements()) {
                batch.addInputFile(files.nextElement());
            }

            SubmitJobs task = new SubmitJobs(controller, batch);
            controller.executeInBackground(task);
            navigator.navigate(this, NavigationController.View.TABLE);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private boolean isValidInput() {

        if (genomeComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please upload a reference genome first!", "Missing Genome", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        if (fileModel.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please add raw sequence data!", "Missing Sequences", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    private boolean tryInitialiseProxies() {

        boolean localProxied = controller.getLocalProxyLifetime() >= REQUIRED_PROXY_TIME;
        boolean gridProxied = controller.getRemoteProxyLifetime() >= tophat.getMaximumProxyLifetime();

        if (!localProxied || !gridProxied) {

            PasswordDialog dialog = new PasswordDialog(this, "Proxy Required");
            dialog.setVisible(true);

            if (dialog.getValue() == JOptionPane.OK_OPTION) {
                if (!localProxied) {
                    try {
                        localProxied = controller.createLocalProxy(dialog.getPassword(), DEFAULT_PROXY_TIME);
                    } catch (IOException | InterruptedException ex) {
                        LOGGER.log(Level.SEVERE, ex.getMessage(), ex);
                        JOptionPane.showMessageDialog(this, "Invalid Passphrase!", "Proxy Creation Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                if (localProxied && !gridProxied) {
                    try {
                        gridProxied = controller.createRemoteProxy(dialog.getPassword(), tophat.getMaximumProxyLifetime());
                    } catch (IOException ex) {
                        LOGGER.log(Level.SEVERE, ex.getMessage(), ex);
                        JOptionPane.showMessageDialog(this, "Invalid Passphrase!", "Proxy Creation Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            dialog.dispose();
        }
        return localProxied && gridProxied;
    }

    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    private void removeFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFilesButtonActionPerformed
        for (Object object : fileList.getSelectedValuesList()) {
            fileModel.removeElement(object);
        }
    }//GEN-LAST:event_removeFilesButtonActionPerformed

    private void browseFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFilesButtonActionPerformed
        JFileChooser sequenceFileChooser = client.view.FileChooser.FASTQ.getAddFileDialog(true);
        int value = sequenceFileChooser.showOpenDialog(this.getParent());
        if (value == JFileChooser.APPROVE_OPTION) {
            for (File f : sequenceFileChooser.getSelectedFiles()) {
                if (!fileModel.contains(f)) {
                    fileModel.addElement(f);
                }
            }
        }
    }//GEN-LAST:event_browseFilesButtonActionPerformed

    private void browseAnnotationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseAnnotationButtonActionPerformed
        JFileChooser annotationFileChooser = client.view.FileChooser.ANNOTATION.getAddFileDialog();
        int value = annotationFileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = annotationFileChooser.getSelectedFile();
            annotationComboBox.addItem(file);
            annotationComboBox.setSelectedItem(file);
        }
    }//GEN-LAST:event_browseAnnotationButtonActionPerformed

    private void browseJunctionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseJunctionsButtonActionPerformed
        JFileChooser junctionFileChooser = client.view.FileChooser.JUNCTION.getAddFileDialog();
        int value = junctionFileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = junctionFileChooser.getSelectedFile();
            junctionComboBox.addItem(file);
            junctionComboBox.setSelectedItem(file);
        }
    }//GEN-LAST:event_browseJunctionsButtonActionPerformed

    private void browseInsertionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInsertionsButtonActionPerformed
        JFileChooser junctionFileChooser = client.view.FileChooser.JUNCTION.getAddFileDialog();
        int value = junctionFileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = junctionFileChooser.getSelectedFile();
            insertionComboBox.addItem(file);
            insertionComboBox.setSelectedItem(file);
        }
    }//GEN-LAST:event_browseInsertionsButtonActionPerformed

    private void browseDeletionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseDeletionsActionPerformed
        JFileChooser junctionFileChooser = client.view.FileChooser.JUNCTION.getAddFileDialog();
        int value = junctionFileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = junctionFileChooser.getSelectedFile();
            deletionComboBox.addItem(file);
            deletionComboBox.setSelectedItem(file);
        }
    }//GEN-LAST:event_browseDeletionsActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox annotationComboBox;
    private javax.swing.JButton browseAnnotationButton;
    private javax.swing.JButton browseDeletions;
    private javax.swing.JButton browseFilesButton;
    private javax.swing.JButton browseInsertionsButton;
    private javax.swing.JButton browseJunctionsButton;
    private javax.swing.JPanel buttonBar;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel centerPanel;
    private javax.swing.ButtonGroup coverageSearch;
    private javax.swing.JComboBox deletionComboBox;
    private javax.swing.JCheckBox enableBowtieN;
    private javax.swing.JCheckBox enableFusionSearch;
    private javax.swing.JList fileList;
    private javax.swing.JSpinner fusionAnchorLength;
    private javax.swing.JComboBox genomeComboBox;
    private javax.swing.JCheckBox ignoreChromosomes;
    private javax.swing.JScrollPane innerScrollPane;
    private javax.swing.JComboBox insertionComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton13;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JSpinner jSpinner10;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JSpinner jSpinner8;
    private javax.swing.JSpinner jSpinner9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JComboBox junctionComboBox;
    private javax.swing.JCheckBox keepFastaOrder;
    private javax.swing.ButtonGroup libraryTypes;
    private javax.swing.JSpinner mateInnerDistance;
    private javax.swing.JSpinner maxAnchorMismatches;
    private javax.swing.JSpinner maxCoverageIntronLength;
    private javax.swing.JSpinner maxDeletionLength;
    private javax.swing.JSpinner maxFusionMismatches;
    private javax.swing.JSpinner maxFusionMultiPairs;
    private javax.swing.JSpinner maxFusionMultiReads;
    private javax.swing.JSpinner maxInsertionLength;
    private javax.swing.JSpinner maxIntronLength;
    private javax.swing.JSpinner maxNumberOfMismatches;
    private javax.swing.JSpinner maxReadAlignments;
    private javax.swing.JSpinner maxReadEditDistance;
    private javax.swing.JSpinner maxSegmentIntronLength;
    private javax.swing.JSpinner maxSegmentMismatches;
    private javax.swing.JSpinner maxTranscriptomeMultiHits;
    private javax.swing.JSpinner maximumGapLength;
    private javax.swing.JSpinner minAnchorLength;
    private javax.swing.JSpinner minCoverageIntronLength;
    private javax.swing.JSpinner minFusionDistance;
    private javax.swing.JSpinner minIntronLength;
    private javax.swing.JSpinner minSegmentIntronLength;
    private javax.swing.JCheckBox noConvertBAM;
    private javax.swing.JCheckBox noMixedReads;
    private javax.swing.JCheckBox noNovelIndels;
    private javax.swing.JCheckBox noNovelJuncs;
    private javax.swing.JCheckBox noSortBAM;
    private javax.swing.JPanel optionsForm;
    private javax.swing.JCheckBox prefilterMultiHits;
    private javax.swing.ButtonGroup presetEndToEnd;
    private javax.swing.ButtonGroup qualityEncoding;
    private javax.swing.JSpinner reAlignEditDistance;
    private javax.swing.JButton removeFilesButton;
    private javax.swing.JCheckBox reportConcordantMappingsOnly;
    private javax.swing.JCheckBox reportSecondaryAlignments;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSpinner segmentLength;
    private javax.swing.JSpinner standardDeviation;
    private javax.swing.JButton submitButton;
    private javax.swing.JCheckBox transcriptomeOnly;
    private javax.swing.JCheckBox useMicroExonSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void fileDeleted(LogicalFile file) {
        switch (file.getType()) {
            case "Genome":
                genomeComboBox.removeItem(file);
                break;
            case "Annotation":
                annotationComboBox.removeItem(file);
                break;
            case "Junction":
                junctionComboBox.removeItem(file);
                insertionComboBox.removeItem(file);
                deletionComboBox.removeItem(file);
                break;
        }
    }

    @Override
    public void fileAdded(LogicalFile file) {
        switch (file.getType()) {
            case "Genome":
                genomeComboBox.addItem(file);
                break;
            case "Annotation":
                annotationComboBox.addItem(file);
                break;
            case "Junction":
                junctionComboBox.addItem(file);
                insertionComboBox.addItem(file);
                deletionComboBox.addItem(file);
                break;
        }
    }
}
